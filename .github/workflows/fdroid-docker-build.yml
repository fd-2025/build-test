name: Build OsmAnd

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          df -h
          ls -la /mnt
          cat /mnt/DATALOSS_WARNING_README.txt
          docker build -t local/osmand:latest .
          df -h

      - name: Show total Docker image size
        run: docker images local/osmand:latest

      - name: Show Docker image layers and their sizes
        run: docker history --no-trunc --human local/osmand:latest

      - name: Create data directory (if needed)
        run: |
          #mkdir ${{ github.workspace }}/data_volume
          #chmod 777 ${{ github.workspace }}/data_volume
          mkdir /mnt/data_volume
          chmod 777 /mnt/data_volume

      - name: Run Docker
        run: |
          #docker run -d --name osmand_container -v "${{ github.workspace }}/data_volume:/mnt/volume" local/osmand:latest sleep infinity
          docker run -d --name osmand_container -v /mnt/data_volume:/mnt/volume local/osmand:latest sleep infinity

      - name: Run prebuild
        run: |
          docker exec -w /mnt/volume osmand_container sh -c '
          whoami
          ls -ld . && \
          ls -la && \
          echo "PATH: $PATH" && \
          echo "ANDROID_HOME: $ANDROID_HOME" && \
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT" && \
          echo "ANDROID_SDK: $ANDROID_SDK" && \
          echo "ANDROID_NDK: $ANDROID_NDK" && \
          echo "FDROIDSERVER: $FDROIDSERVER" && \
          echo "PYTHONPATH: $PYTHONPATH" && \
          echo "PYTHONUNBUFFERED: $PYTHONUNBUFFERED"
          '
          docker exec -w /mnt/volume osmand_container setup-volume.sh
          docker exec -w /mnt/volume/OsmAnd-submodules osmand_container ./prebuild.sh "5.1.6" "5106" arm64

      - name: Run build
        #continue-on-error: true
        run: |
          df -h
          docker exec -w /mnt/volume/OsmAnd-submodules osmand_container ./build.sh arm64
          df -h
          #docker exec -w /mnt/volume/OsmAnd-submodules osmand_container du -sh core/externals/boost
          #docker exec -w /mnt/volume/OsmAnd-submodules osmand_container rm -rf core/externals/boost
          #df -h

      - name: Run gradle
        #continue-on-error: true
        run: |
          docker exec -w /mnt/volume/OsmAnd-submodules/android/OsmAnd osmand_container gradle assembleAndroidFullOpenglArm64Release
          df -h

      - name: Run stop Docker
        continue-on-error: true
        run: |
          docker stop osmand_container

          echo "find APKs:"
          find ${{ github.workspace }}/volume -type f -name 'OsmAnd*.apk'

          docker rm osmand_container
          df -h

      - name: Upload apk as artifact
        #continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: apk-file
          path: ${{ github.workspace }}/volume/**/OsmAnd*.apk
