name: fdroid build

on:
  push:
  workflow_dispatch:

jobs:
  show-system-info:
    if: false
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        continue-on-error: true
        uses: actions/checkout@v4

      - name: whoami
        continue-on-error: true
        run: whoami

      - name: Show current working directory
        continue-on-error: true
        run: |
          echo "### Current working directory:"
          pwd

      - name: Show RAM information
        continue-on-error: true
        run: |
          echo "### RAM information:"
          free -h

      - name: Show CPU information
        continue-on-error: true
        run: |
          echo "### CPU information:"
          lscpu

      - name: Show disk space
        continue-on-error: true
        run: |
          echo "### Disk space:"
          df -h

      - name: uname
        continue-on-error: true
        run: |
          echo "### uname -a:"
          uname -a

      - name: lsb_release
        continue-on-error: true
        run: |
          echo "### lsb_release:"
          lsb_release -a

      - name: apt
        continue-on-error: true
        run: |
          echo "### apt:"
          sudo apt-get update
          sudo apt-get dist-upgrade
          sudo apt-get install swig cmake lsb-release tree

      - name: Show directory structure from root
        continue-on-error: true
        run: |
          echo "### Directory structure from root (/), depth 2:"
          tree -L 2 /
  build:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/fdroid/fdroidserver:buildserver-bookworm

    steps:
      - name: Checkout repository
        continue-on-error: true
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${ANDROID_HOME}" >> $GITHUB_ENV
          echo "ANDROID_SDK=${ANDROID_HOME}" >> $GITHUB_ENV
          echo "ANDROID_NDK=/opt/android-sdk/ndk/23.2.8568313" >> $GITHUB_ENV
          echo "FDROIDSERVER=/home/vagrant/fdroidserver" >> $GITHUB_ENV
          echo "PATH=/opt/gradle/bin:${FDROIDSERVER}:${PATH}" >> $GITHUB_ENV
          echo "PYTHONPATH=${FDROIDSERVER}:${FDROIDSERVER}/examples" >> $GITHUB_ENV
          echo "PYTHONUNBUFFERED=true" >> $GITHUB_ENV

      - name: whoami
        continue-on-error: true
        run: whoami

      - name: Show current working directory
        continue-on-error: true
        run: |
          echo "### Current working directory:"
          pwd

      - name: Show RAM information
        continue-on-error: true
        run: |
          echo "### RAM information:"
          free -h

      - name: Show CPU information
        continue-on-error: true
        run: |
          echo "### CPU information:"
          lscpu

      - name: Show disk space
        continue-on-error: true
        run: |
          echo "### Disk space:"
          df -h

      - name: uname
        continue-on-error: true
        run: |
          echo "### uname -a:"
          uname -a

      - name: apt
        continue-on-error: true
        run: |
          echo "### apt:"
          apt-get update
          apt-get dist-upgrade
          
          echo "PATH: $PATH"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "ANDROID_SDK: $ANDROID_SDK"
          echo "ANDROID_NDK: $ANDROID_NDK"
          echo "FDROIDSERVER: $FDROIDSERVER"
          echo "PYTHONPATH: $PYTHONPATH"
          echo "PYTHONUNBUFFERED: $PYTHONUNBUFFERED"
          
          mkdir ${FDROIDSERVER}
          git ls-remote https://gitlab.com/fdroid/fdroidserver.git master
          curl --silent https://gitlab.com/fdroid/fdroidserver/-/archive/master/fdroidserver-master.tar.gz | tar -xz --directory=${FDROIDSERVER} --strip-components=1
          
          apt-get install -y lsb-release tree
          apt-get install -y ant g++ clang build-essential swig
          apt-get install -y cmake automake zip
          apt-get install -y byacc libpcre2-dev python-is-python3
          apt-get install -y openjdk-17-jdk-headless
          
          update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
          which java
          which javac
          ls -la /usr/lib/jvm/java-17-openjdk-amd64/bin/java
          java -version
          javac -version
          
          sdkmanager "platform-tools" "build-tools;31.0.0" "ndk;r23c"

      - name: lsb_release
        continue-on-error: true
        run: |
          echo "### lsb_release:"
          lsb_release -a
          cat /etc/passwd

      - name: fdroidserver path
        continue-on-error: true
        run: |
          echo "### ls fdroidserver path:"
          ls -la "$FDROIDSERVER"

      - name: android-sdk path
        continue-on-error: true
        run: |
          echo "### ls android-sdk path:"
          ls -la "$ANDROID_SDK"

      - name: android-ndk path
        continue-on-error: true
        run: |
          echo "### ls android-ndk path:"
          ls -la "$ANDROID_NDK"

      - name: Show directory structure from root
        continue-on-error: true
        run: |
          echo "### Directory structure from root (/), depth 4:"
          tree -L 4 /

      - name: build
        continue-on-error: true
        run: |
          echo "### Build:"
          su vagrant
          whoami
          pwd
          echo "PATH:"
          echo $PATH
          echo "ANDROID_HOME:"
          echo $ANDROID_HOME
          echo "ANDROID_SDK_ROOT:"
          echo $ANDROID_SDK_ROOT
          git clone --depth 1 https://gitlab.com/f-droid-mirrors/OsmAnd-submodules.git
          cd OsmAnd-submodules
          git submodule init
          git submodule update --depth 1
          ls -la help
          du -sh help
          rm -Rf help
          ./prebuild.sh "5.1.2" "5102" arm64
          ./build.sh arm64
          cd android/Osmand
          gradle assembleAndroidFullOpenglArm64Release
