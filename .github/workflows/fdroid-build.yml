name: fdroid build

on:
  push:
  workflow_dispatch:

jobs:
  show-system-info:
    #if: false
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        #continue-on-error: true
        uses: actions/checkout@v4

      - name: whoami
        #continue-on-error: true
        run: whoami

      - name: Show current working directory
        #continue-on-error: true
        run: |
          echo "### Current working directory:"
          pwd

      - name: Show RAM information
        #continue-on-error: true
        run: |
          echo "### RAM information:"
          free -h

      - name: Show CPU information
        #continue-on-error: true
        run: |
          echo "### CPU information:"
          lscpu

      - name: Show disk space
        #continue-on-error: true
        run: |
          echo "### Disk space:"
          df -h

      - name: uname
        #continue-on-error: true
        run: |
          echo "### uname -a:"
          uname -a

      - name: lsb_release
        #continue-on-error: true
        run: |
          echo "### lsb_release:"
          lsb_release -a

      - name: apt
        #continue-on-error: true
        run: |
          echo "### apt:"
          sudo apt-get update
          sudo apt-get dist-upgrade

      - name: Show directory structure from root
        #continue-on-error: true
        run: |
          echo "### Directory structure from root (/), depth 2:"
          sudo tree -L 2 /
  build:
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/fdroid/fdroidserver:buildserver-bookworm

    steps:
      - name: Show GITHUB_WORKSPACE
        #continue-on-error: true
        run: echo $GITHUB_WORKSPACE

      - name: ls GITHUB_WORKSPACE
        #continue-on-error: true
        run: ls -l $GITHUB_WORKSPACE

      - name: Show RUNNER_TEMP
        #continue-on-error: true
        run: echo $RUNNER_TEMP

      - name: ls RUNNER_TEMP
        #continue-on-error: true
        run: ls -l $RUNNER_TEMP

      - name: Checkout repository
        #continue-on-error: true
        uses: actions/checkout@v4

      - name: Write hello.txt
        #continue-on-error: true
        run: echo "Hello" > $GITHUB_WORKSPACE/hello.txt

      - name: ls GITHUB_WORKSPACE
        #continue-on-error: true
        run: ls -l $GITHUB_WORKSPACE

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello-file
          path: ${{ github.workspace }}/hello.txt

      - name: Set environment variables
        run: |
          echo "ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=/opt/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK=/opt/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK=/opt/android-sdk/ndk/23.2.8568313" >> $GITHUB_ENV
          echo "FDROIDSERVER=/home/vagrant/fdroidserver" >> $GITHUB_ENV
          echo "PATH=/opt/gradle/bin:/home/vagrant/fdroidserver:${PATH}" >> $GITHUB_ENV
          echo "PYTHONPATH=/home/vagrant/fdroidserver:/home/vagrant/fdroidserver/examples" >> $GITHUB_ENV
          echo "PYTHONUNBUFFERED=true" >> $GITHUB_ENV
          #echo "GRADLE_OPTS=-Xmx4096m" >> $GITHUB_ENV

      - name: whoami
        #continue-on-error: true
        run: whoami

      - name: Show current working directory
        #continue-on-error: true
        run: |
          echo "### Current working directory:"
          pwd

      - name: Show RAM information
        #continue-on-error: true
        run: |
          echo "### RAM information:"
          free -h

      - name: Show CPU information
        #continue-on-error: true
        run: |
          echo "### CPU information:"
          lscpu

      - name: Show disk space
        #continue-on-error: true
        run: |
          echo "### Disk space:"
          df -h

      - name: uname
        #continue-on-error: true
        run: |
          echo "### uname -a:"
          uname -a

      - name: du
        #continue-on-error: true
        run: |
          echo "### du:"
          du -h --max-depth=1 / | sort -h -r

      - name: install
        #continue-on-error: true
        run: |
          echo "### install:"
          apt-get update
          apt-get dist-upgrade
          
          echo "PATH: $PATH"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "ANDROID_SDK: $ANDROID_SDK"
          echo "ANDROID_NDK: $ANDROID_NDK"
          echo "FDROIDSERVER: $FDROIDSERVER"
          echo "PYTHONPATH: $PYTHONPATH"
          echo "PYTHONUNBUFFERED: $PYTHONUNBUFFERED"
          #echo "GRADLE_OPTS: $GRADLE_OPTS"
          
          mkdir ${FDROIDSERVER}
          git ls-remote https://gitlab.com/fdroid/fdroidserver.git master
          curl --silent https://gitlab.com/fdroid/fdroidserver/-/archive/master/fdroidserver-master.tar.gz | tar -xz --directory=${FDROIDSERVER} --strip-components=1
          
          apt-get install -y lsb-release tree
          #apt-get install -y ant g++ clang build-essential swig
          #apt-get install -y cmake automake zip
          #apt-get install -y byacc libpcre2-dev python-is-python3
          #apt-get install -y openjdk-17-jdk-headless
          apt-get install -y openjdk-17-jdk-headless build-essential cmake clang python-is-python3 wget swig zip
          
          update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
          which java
          which javac
          ls -la /usr/lib/jvm/java-17-openjdk-amd64/bin/java
          java -version
          javac -version
          
          sdkmanager "platform-tools" "build-tools;31.0.0" "ndk;r23c"
          
          echo "### Disk space after install:"
          df -h

      - name: lsb_release
        #continue-on-error: true
        run: |
          echo "### lsb_release:"
          lsb_release -a
          cat /etc/passwd

      - name: fdroidserver path
        #continue-on-error: true
        run: |
          echo "### ls fdroidserver path:"
          ls -la "$FDROIDSERVER"

      - name: android-sdk path
        #continue-on-error: true
        run: |
          echo "### ls android-sdk path:"
          ls -la "$ANDROID_SDK"

      - name: android-ndk path
        #continue-on-error: true
        run: |
          echo "### ls android-ndk path:"
          ls -la "$ANDROID_NDK"

      - name: Show directory structure from root
        #continue-on-error: true
        run: |
          echo "### Directory structure from root (/), depth 4:"
          tree -L 4 /

      - name: build
        #continue-on-error: true
        run: |
          echo "### Build:"
          su vagrant
          whoami #root
          pwd
          echo "find APK begin:"
          find ~ -type f -name "*.apk"
          echo "PATH:"
          echo $PATH
          echo "ANDROID_HOME:"
          echo $ANDROID_HOME
          echo "ANDROID_SDK_ROOT:"
          echo $ANDROID_SDK_ROOT
          git clone --branch v5.1.5 --depth 1 https://github.com/fd-2025/OsmAnd-submodules.git #https://gitlab.com/f-droid-mirrors/OsmAnd-submodules.git
          cd OsmAnd-submodules
          git submodule init
          git submodule update --depth 1
          ls -la android/OsmAnd-java/libs/*.jar
          ls -la android/OsmAnd/libs/*.jar
          ls -la android/OsmAnd-telegram/
          ls -la resources/icons/tools/SVGtoXML/vd-tool
          rm -Rf android/OsmAnd-java/libs/*.jar
          rm -Rf android/OsmAnd/libs/*.jar
          rm -Rf android/OsmAnd-telegram/
          rm -Rf resources/icons/tools/SVGtoXML/vd-tool
          
          echo "### du begin:"
          du -h --max-depth=1 . | sort -h -r
          
          ./prebuild.sh "5.1.4" "510403" arm64
          ./build.sh arm64
          
          echo "### Disk space mid build:"
          df -h
          du -h --max-depth=7 . | sort -h -r
          
          echo "### find build:"
          find . -type f -name "*.so"
          find . -type f -name "*.jar"
          find . -type f -name "*.aar"

          echo "### delete:"
          pwd
          rm -Rf core/externals/boost
          #rm -Rf core/wrappers/android/build/intermediates
          
          echo "### Disk space mid build 2:"
          df -h

      - name: build2
        #continue-on-error: true
        run: |
          echo "### Build2:"
          whoami
          #su vagrant
          #whoami
          pwd
          echo "PATH:"
          echo $PATH
          echo "ANDROID_HOME:"
          echo $ANDROID_HOME
          echo "ANDROID_SDK_ROOT:"
          echo $ANDROID_SDK_ROOT

          cd OsmAnd-submodules
          cd android/OsmAnd
          
          pwd
          
          gradle assembleAndroidFullOpenglArm64Release
          #gradle assembleAndroidFullOpenglArm64Release -x :OsmAnd-java:test
          
          echo "### Disk space after build:"
          df -h
          
          whoami
          echo "find all APKs:"
          find / -type f -name '*.apk'
          echo "find APKs:"
          find / -type f -name 'OsmAnd*.apk'
          echo "find and copy APKs to workspace:"
          mkdir $GITHUB_WORKSPACE/output
          find / -type f -name 'OsmAnd*.apk' -exec cp {} $GITHUB_WORKSPACE/output/ \;
          ls -l $GITHUB_WORKSPACE/output

      - name: Upload all APKs as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: ${{ github.workspace }}/output/
